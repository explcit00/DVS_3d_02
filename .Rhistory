options(rgl.useNULL = FALSE)
install.packages("tidyverse")
install.packages("sf")
install.packages("tmap")
install.packages("ggplot2")
install.packages("mapview")
install.packages("stars")
install.packages("rayshader")
install.packages("MetBrewer")
install.packages("colorspace")
install.packages("rayrender")
install.packages("magick")
install.packages("extrafont")
install.packages("jpeg")
library(tidyverse)
library(sf)
library(tmap)
library(ggplot2)
library(mapview)
library(stars)
library(rayshader)
library(MetBrewer)
library(colorspace)
library(rayrender)
library(magick)
library(extrafont)
library(jpeg)
bd_hex <-
st_read("Data/k_p_IE_20220630.gpkg") %>%
st_transform(3106)
bd_admin <-
st_read("Data/k_p_IE_20231101.gpkg") %>%
st_transform(3106)
bd_boundary <-
bd_admin %>%
st_geometry %>%
st_union %>%
st_sf %>%
st_make_valid()
ggplot(bd_hex) +
geom_sf(aes(fill = population),
color = "darkblue",
linewidth = 0) +
geom_sf(
data = bd_boundary,
fill = NA,
color = "blue",
linetype = "dashed",
linewidth = 1
)
bbox <- st_bbox(bd_boundary)
ggplot(bd_hex) +
geom_sf(aes(fill = population),
color = "black",
linewidth = 0) +
geom_sf(
data = bd_boundary,
fill = NA,
color = "blue",
linetype = "dashed",
linewidth = 1
)
ggplot(bd_hex) +
geom_sf(aes(fill = population),
color = "black",
linewidth = 0) +
geom_sf(
data = bd_boundary,
fill = NA,
color = "lightblue",
linetype = "dashed",
linewidth = 1
)
na.omit(bd_hex)
na.omit(bd_admin)
ggplot(bd_hex) +
geom_sf(aes(fill = population),
color = "black",
linewidth = 0) +
geom_sf(
data = bd_boundary,
fill = NA,
color = "blue",
linetype = "dashed",
linewidth = 1
)
bbox <- st_bbox(bd_boundary)
bottom_left <- st_point(c(bbox[["xmin"]], bbox[["ymin"]])) %>%
st_sfc(crs = 3106)
bottom_right <- st_point(c(bbox[["xmax"]], bbox[["ymin"]])) %>%
st_sfc(crs = 3106)
top_left <- st_point(c(bbox[["xmin"]], bbox[["ymax"]])) %>%
st_sfc(crs = 3106)
width <- st_distance(bottom_left, bottom_right)
height <- st_distance(bottom_left, top_left)
if(width > height) {
w_ratio = 1
h_ratio = height / width
} else {
h_ratio = 1.1
w_ratio = width / height
}
size = 1000 * 2.5
pop_raster <- st_rasterize(
bd_hex,
nx = floor(size * w_ratio) %>% as.numeric(),
ny = floor(size * h_ratio) %>% as.numeric()
)
pop_matrix <- matrix(pop_raster$population,
nrow = floor(size * w_ratio),
ncol = floor(size * h_ratio))
color <- MetBrewer::met.brewer(name="Hokusai2", direction = -1)
tx <- grDevices::colorRampPalette(color, bias = 4.5)(256)
swatchplot(tx)
swatchplot(color)
rgl::close3d()
pop_matrix %>%
height_shade(texture = color) %>%
plot_3d(heightmap = pop_matrix,
zscale = 250 / 1,
solid = F,
shadowdepth = 0)
outfile <- glue::glue("D:/Git_IRELAND/3d_01.jpeg")
{
start_time <- Sys.time()
cat(crayon::cyan(start_time), "\n")
if(!file.exists(outfile))
{
jpeg::writeJPEG(matrix(1), target = outfile)
}
render_highquality(
filename = outfile,
interactive = FALSE,
lightdirection = 225,
lightaltitude = c(20, 80),
lightcolor = c(color[2], "white"),
lightintensity = c(600, 100),
width = 1980,
height = 1180,
samples = 300
)
{
start_time <- Sys.time()
cat(crayon::cyan(start_time), "\n")
if(!file.exists(outfile))
{
jpeg::writeJPEG(matrix(1), target = outfile)
}
render_highquality(
filename = outfile,
interactive = FALSE,
lightdirection = 225,
lightaltitude = c(20, 80),
lightcolor = c(color[2], "white"),
lightintensity = c(600, 100),
width = 1980,
height = 1180,
samples = 300
)
end_time <- Sys.time()
diff <- end_time - start_time
cat(crayon::cyan(diff), "\n")
}
